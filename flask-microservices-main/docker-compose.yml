version: '2.1'

services:
  users-db:
    container_name: users-db
    build: ../flask-microservices-users/project/db
    #ports:
    #    - 5435:5432  # expose ports - HOST:CONTAINER
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  users-service:
    container_name: users-service
    build: ../flask-microservices-users
    #ports:
    #  - 5001:5000 # expose ports - HOST:CONTAINER
    expose:
      - 5000    
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - SECRET_KEY=my_precious
    depends_on:
      users-db:
        condition: service_healthy
    links:
      - users-db

  nginx:
    container_name: nginx
    build: ./nginx/
    restart: always
    ports:
      - 80:80
    depends_on:
      users-service:
        condition: service_started
      web-service:
        condition: service_started
    links:
      - users-service
      - web-service

  web-service:
    container_name: web-service
    build:
      context: ../flask-microservices-client
      args:
        - NODE_ENV=development
        - REACT_APP_USERS_SERVICE_URL=127.0.0.1 #$REACT_APP_USERS_SERVICE_URL
    #ports:
    #  - '9000:9000' # expose ports - HOST:CONTAINER
    expose:
      - 9000
    depends_on:
      users-service:
        condition: service_started
    links:
      - users-service

  swagger:
    container_name: swagger
    build:
      context: ../flask-microservices-swagger
    ports:
      - '8080:8080' # expose ports - HOST:CONTAINER
    environment:
      - API_URL=https://raw.githubusercontent.com/realpython/flask-microservices-swagger/master/swagger.json
    depends_on:
      users-service:
        condition: service_started

  prometheus:
    build: ./prometheus
    volumes:
        - prometheus_data:/prometheus
    command:
        - '-config.file=/etc/prometheus/prometheus.yml'
        - '-storage.local.memory-chunks=100000'
    ports:
        - '9090:9090'

  node-exporter:
    image: prom/node-exporter:0.12.0
    expose:
      - 9100
    #volumes:
      #- /proc:/host/proc:ro
      #- /sys:/host/sys:ro
      #- /:/rootfs:ro
    #command:
      #- '-collector.procfs=/host/proc'
      #- '-collector.sysfs=/host/sys'
      #- '-collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

  #cadvisor:
    #image: google/cadvisor:v0.26.1    
    #volumes:
      #- /:/rootfs:ro
      #- /var/run:/var/run:rw
      #- /sys:/sys:ro
      #- /var/lib/docker/:/var/lib/docker:ro    
    #expose:
    #- 9200

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    expose:
      - 9187
    environment:
      DATA_SOURCE_NAME: 'postgres://postgres:postgres@users-db:5432/?sslmode=disable'
    depends_on:      
      - users-db
  
  nginx-exporter:
    image: fish/nginx-exporter    
    expose:
      - 9113
    command:
      - '-nginx.scrape_uri=http://nginx:80/nginx_status'
    depends_on:      
      - nginx  
        
  grafana:
    image: grafana/grafana:4.5.0
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=pass
    volumes:
        - grafana_data:/var/lib/grafana
    ports:
        - '3000:3000'
    depends_on:
        - prometheus
volumes:
    prometheus_data: {}
    grafana_data: {}